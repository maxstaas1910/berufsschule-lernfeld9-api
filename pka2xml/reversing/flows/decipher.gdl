graph: {
title: "Graph of _ZN4Util8decipherIN8CryptoPP7TwofishEEE10QByteArrayRKS3_PhS6_"
manhattan_edges: yes
layoutalgorithm: mindepth
finetuning: no
layout_downfactor: 100
layout_upfactor: 0
layout_nearfactor: 0
xlspace: 12
yspace: 30
// IDA palette
colorentry 32: 0 0 0
colorentry 33: 0 0 255
colorentry 34: 0 0 255
colorentry 35: 128 128 128
colorentry 36: 128 128 128
colorentry 37: 0 0 128
colorentry 38: 0 0 128
colorentry 39: 0 0 255
colorentry 40: 0 0 255
colorentry 41: 0 0 128
colorentry 42: 0 128 0
colorentry 43: 0 255 0
colorentry 44: 0 128 0
colorentry 45: 255 128 0
colorentry 46: 0 128 0
colorentry 47: 128 128 255
colorentry 48: 255 0 0
colorentry 49: 128 128 0
colorentry 50: 1 1 1
colorentry 51: 192 192 192
colorentry 52: 0 0 255
colorentry 53: 0 0 255
colorentry 54: 0 0 255
colorentry 55: 128 128 128
colorentry 56: 128 128 255
colorentry 57: 0 128 0
colorentry 58: 0 0 128
colorentry 59: 0 0 255
colorentry 60: 128 0 128
colorentry 61: 0 128 0
colorentry 62: 0 128 0
colorentry 63: 0 128 64
colorentry 64: 0 0 128
colorentry 65: 0 0 128
colorentry 66: 255 0 255
colorentry 67: 128 128 0
colorentry 68: 0 0 128
colorentry 69: 0 0 255
colorentry 70: 0 0 128
colorentry 71: 0 0 255
colorentry 72: 0 0 0
colorentry 73: 255 255 255
colorentry 74: 192 187 175
colorentry 75: 0 255 255
colorentry 76: 0 0 0
colorentry 77: 128 0 0
colorentry 78: 128 128 128
colorentry 79: 128 128 0
colorentry 80: 255 0 255
colorentry 81: 0 0 0
colorentry 82: 0 0 255
colorentry 83: 0 0 0
node: { title: "0" label: "69_ZN4Util8decipherIN8CryptoPP7TwofishEEE10QByteArrayRKS3_PhS6_31:
push    r15
push    r14
mov     r15, rdi
push    r13
push    r12
mov     r14, rdx
push    rbp
push    rbx
mov     r13, rcx
sub     rsp, 12C8h
lea     r12, [rsp+12F8h+var_12E8]
lea     rbx, [rsp+12F8h+decryptor]
mov     [rsp+12F8h+var_12F0], rsi
mov     rax, fs:28h
mov     [rsp+12F8h+var_40], rax
xor     eax, eax
lea     rax, [r12+10h]
mov     rdi, rbx
mov     qword ptr [rsp+12F8h+var_12E0], 0
mov     [rsp+12F8h+var_12D8], 0
mov     [rsp+12F8h+var_12E8], rax
call    _ZN8CryptoPP8EAX_BaseC2Ev; CryptoPP::EAX_Base::EAX_Base(void)
lea     rbp, _ZTVN8CryptoPP9EAX_FinalINS_7TwofishELb0EEE; `vtable for'CryptoPP::EAX_Final<CryptoPP::Twofish,false>
lea     rdi, [rbx+0F0h]
mov     esi, 1
lea     rax, [rbp+10h]
mov     [rsp+12F8h+decryptor], rax
lea     rax, [rbp+180h]
mov     [rsp+12F8h+var_1250], rax
lea     rax, [rbp+230h]
mov     [rsp+12F8h+var_1248], rax
lea     rax, _ZTVN8CryptoPP21SimpleKeyingInterfaceE; `vtable for'CryptoPP::SimpleKeyingInterface
add     rax, 10h
mov     [rsp+12F8h+var_1170], rax
call    _ZN8CryptoPP9AlgorithmC2Eb; CryptoPP::Algorithm::Algorithm(bool)
lea     rax, _ZTVN8CryptoPP4CMACINS_7TwofishEEE; `vtable for'CryptoPP::CMAC<CryptoPP::Twofish>
lea     rdi, [rbx+128h]
mov     esi, 1
mov     [rsp+12F8h+var_1158], 0FFFFFFFFFFFFFFFFh
mov     [rsp+12F8h+var_1150], 0
mov     [rsp+12F8h+var_1148], 0
mov     [rsp+12F8h+var_1140], 0
lea     rdx, [rax+10h]
add     rax, 0E0h
mov     [rsp+12F8h+var_1168], rax
lea     rax, _ZTVN8CryptoPP21SimpleKeyingInterfaceE; `vtable for'CryptoPP::SimpleKeyingInterface
mov     [rsp+12F8h+var_1170], rdx
add     rax, 10h
mov     [rsp+12F8h+var_1138], rax
call    _ZN8CryptoPP9AlgorithmC2Eb; CryptoPP::Algorithm::Algorithm(bool)
mov     rax, 3FFFFFFFFFFFFFFFh
lea     rdx, [rbx+130h]
mov     r8d, 16
mov     [rsp+12F8h+var_1080], rax
mov     [rsp+12F8h+var_60], rax
lea     rax, [rbx+1F0h]
mov     [rsp+12F8h+input], rdx
mov     rcx, r13; address of iv
mov     rsi, r14; address of key
mov     [rsp+12F8h+var_50], rax
lea     rax, _ZTVN8CryptoPP16BlockCipherFinalILNS_9CipherDirE0ENS_7Twofish3EncEEE; `vtable for'CryptoPP::BlockCipherFinal<(CryptoPP::CipherDir)0,CryptoPP::Twofish::Enc>
mov     rdi, rbx
mov     [rsp+12F8h+var_1078], 28h
mov     [rsp+12F8h+var_1087], 1
mov     [rsp+12F8h+var_58], 400h
mov     [rsp+12F8h+var_67], 1
lea     rdx, [rax+10h]
add     rax, 0C8h
mov     [rsp+12F8h+var_1130], rax
mov     [rsp+12F8h+var_1138], rdx
mov     edx, 16
call    _ZN8CryptoPP21SimpleKeyingInterface12SetKeyWithIVEPKhmS2_m; CryptoPP::SimpleKeyingInterface::SetKeyWithIV(uchar const*,ulong,uchar const*,ulong)
mov     edi, 20h ; ' '; unsigned __int64
call    __Znwm; operator new(ulong)
xor     esi, esi
mov     rdi, rax
mov     r13, rax
call    _ZN8CryptoPP9AlgorithmC2Eb; CryptoPP::Algorithm::Algorithm(bool)
lea     rax, _ZTVN8CryptoPP18StringSinkTemplateINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE; `vtable for'CryptoPP::StringSinkTemplate<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char>>>
mov     [r13+18h], r12
mov     edi, 230h; unsigned __int64
lea     rdx, [rax+10h]
add     rax, 416
mov     [r13+8], rax
mov     [r13+0], rdx
call    __Znwm; operator new(ulong)
mov     r9d, 5
mov     r8d, 0FFFFFFFFh
mov     ecx, 10h
mov     rdx, r13
mov     rsi, rbx
mov     rdi, rax
mov     r14, rax
call    _ZN8CryptoPP29AuthenticatedDecryptionFilterC2ERNS_28AuthenticatedSymmetricCipherEPNS_22BufferedTransformationEjiNS_21BlockPaddingSchemeDef18BlockPaddingSchemeE; CryptoPP::AuthenticatedDecryptionFilter::AuthenticatedDecryptionFilter(CryptoPP::AuthenticatedSymmetricCipher &,CryptoPP::BufferedTransformation *,uint,int,CryptoPP::BlockPaddingSchemeDef::BlockPaddingScheme)
mov     rax, [rsp+8]
lea     rdi, [rsp+30h]
mov     r8, r14
mov     ecx, 1
mov     rsi, [rax]
movsxd  rdx, dword ptr [rsi+4]
add     rsi, [rsi+16]
call    _ZN8CryptoPP12StringSourceC2EPKhmbPNS_22BufferedTransformationE; CryptoPP::StringSource::StringSource(uchar const*,ulong,bool,CryptoPP::BufferedTransformation *)
lea     rax, _ZTVN8CryptoPP6FilterE; `vtable for'CryptoPP::Filter
mov     rdi, [rsp+48h]
lea     rdx, [rax+10h]
add     rax, 1B8h
test    rdi, rdi
mov     [rsp+12F8h+var_12C0], rax
mov     [rsp+12F8h+stringsource], rdx
jz      short loc_34AC17F" vertical_order: 0 }
node: { title: "1" label: "mov     rax, [rdi]
call    qword ptr [rax+8]" }
node: { title: "2" label: "mov     edx, [rsp+12F8h+var_12E0]; int
mov     rsi, [rsp+12F8h+var_12E8]; char *
mov     rdi, r15; this
call    __ZN10QByteArrayC1EPKci; QByteArray::QByteArray(char const*,int)
lea     rax, [rbp+10h]
lea     rdi, [rbx+0E8h]
add     r12, 10h
mov     [rsp+12F8h+decryptor], rax
lea     rax, [rbp+180h]
mov     [rsp+12F8h+var_1250], rax
lea     rax, [rbp+230h]
mov     [rsp+12F8h+var_1248], rax
call    _ZN8CryptoPP4CMACINS_7TwofishEED2Ev; CryptoPP::CMAC<CryptoPP::Twofish>::~CMAC()
mov     rdi, rbx
call    _ZN8CryptoPP8EAX_BaseD2Ev; CryptoPP::EAX_Base::~EAX_Base()
mov     rdi, [rsp+12F8h+var_12E8]; void *
cmp     rdi, r12
jz      short loc_34AC1E1" }
node: { title: "3" label: "call    __ZdlPv; operator delete(void *)" }
node: { title: "4" label: "mov     rcx, [rsp+12F8h+var_40]
xor     rcx, fs:28h
mov     rax, r15
jnz     short loc_34AC209" }
node: { title: "5" label: "add     rsp, 12C8h
pop     rbx
pop     rbp
pop     r12
pop     r13
pop     r14
pop     r15
retn" vertical_order: 18 }
node: { title: "6" label: "call    ___stack_chk_fail" vertical_order: 18 }
node: { title: "7" label: "mov     rdi, r14; void *
mov     r13, rax
call    __ZdlPv; operator delete(void *)" }
node: { title: "8" label: "lea     rax, [rbp+10h]
lea     rdi, [rbx+0E8h]
mov     [rsp+12F8h+decryptor], rax
lea     rax, [rbp+180h]
mov     [rsp+12F8h+var_1250], rax
lea     rax, [rbp+230h]
mov     rbp, r13
mov     [rsp+12F8h+var_1248], rax
call    _ZN8CryptoPP4CMACINS_7TwofishEED2Ev; CryptoPP::CMAC<CryptoPP::Twofish>::~CMAC()
mov     rdi, rbx
call    _ZN8CryptoPP8EAX_BaseD2Ev; CryptoPP::EAX_Base::~EAX_Base()" }
node: { title: "9" label: "mov     rdi, [rsp+12F8h+var_12E8]; void *
add     r12, 10h
cmp     rdi, r12
jz      short loc_34AC26D" }
node: { title: "10" label: "call    __ZdlPv; operator delete(void *)" }
node: { title: "11" label: "mov     rdi, rbp; struct _Unwind_Exception *
call    __Unwind_Resume" vertical_order: 18 }
node: { title: "12" label: "mov     r14, rax
mov     rdi, r13; void *
call    __ZdlPv; operator delete(void *)
mov     r13, r14
jmp     short loc_34AC219" }
node: { title: "13" label: "mov     r13, rax
jmp     short loc_34AC219" }
node: { title: "14" label: "mov     rbp, rax
lea     rax, _ZTVN8CryptoPP9CMAC_BaseE; `vtable for'CryptoPP::CMAC_Base
lea     rdi, [rbx+0F8h]
lea     rdx, [rax+10h]
add     rax, 0D8h
mov     [rsp+12F8h+var_1168], rax
mov     [rsp+12F8h+var_1170], rdx
call    _ZN8CryptoPP8SecBlockIhNS_20AllocatorWithCleanupIhLb0EEEED2Ev; CryptoPP::SecBlock<uchar,CryptoPP::AllocatorWithCleanup<uchar,false>>::~SecBlock()" }
node: { title: "15" label: "mov     rdi, rbx
call    _ZN8CryptoPP8EAX_BaseD2Ev; CryptoPP::EAX_Base::~EAX_Base()
jmp     short loc_34AC25A" }
node: { title: "16" label: "mov     rbp, rax
jmp     short loc_34AC2BA" }
node: { title: "17" label: "mov     rbp, rax
jmp     short loc_34AC25A" }
// node 0
edge: { sourcename: "0" targetname: "1" label: "false" color: red }
edge: { sourcename: "0" targetname: "2" label: "true" color: darkgreen }
// node 1
edge: { sourcename: "1" targetname: "2" }
// node 2
edge: { sourcename: "2" targetname: "3" label: "false" color: red }
edge: { sourcename: "2" targetname: "4" label: "true" color: darkgreen }
// node 3
edge: { sourcename: "3" targetname: "4" }
// node 4
edge: { sourcename: "4" targetname: "5" label: "false" color: red }
edge: { sourcename: "4" targetname: "6" label: "true" color: darkgreen }
// node 5
// node 6
// node 7
edge: { sourcename: "7" targetname: "8" }
// node 8
edge: { sourcename: "8" targetname: "9" }
// node 9
edge: { sourcename: "9" targetname: "10" label: "false" color: red }
edge: { sourcename: "9" targetname: "11" label: "true" color: darkgreen }
// node 10
edge: { sourcename: "10" targetname: "11" }
// node 11
// node 12
edge: { sourcename: "12" targetname: "8" }
// node 13
edge: { sourcename: "13" targetname: "8" }
// node 14
edge: { sourcename: "14" targetname: "15" }
// node 15
edge: { sourcename: "15" targetname: "9" }
// node 16
edge: { sourcename: "16" targetname: "15" }
// node 17
edge: { sourcename: "17" targetname: "9" }
}
